root-- VOC2007
Pruning round 1, load model from models/ep1000ws1pr/mb1-ssd-lite-Epoch-945-Loss-3.2492578540529524.pth
SSD(
  (base_net): Sequential(
    (0): Sequential(
      (0): Conv2d(3, 12, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (1): Sequential(
      (0): Conv2d(12, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=12, bias=False)
      (1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(12, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (2): Sequential(
      (0): Conv2d(24, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=24, bias=False)
      (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(24, 47, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (3): Sequential(
      (0): Conv2d(47, 47, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=47, bias=False)
      (1): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(47, 47, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (4): Sequential(
      (0): Conv2d(47, 47, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=47, bias=False)
      (1): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(47, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(93, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (5): Sequential(
      (0): Conv2d(93, 93, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=93, bias=False)
      (1): BatchNorm2d(93, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(93, 93, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(93, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (6): Sequential(
      (0): Conv2d(93, 93, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=93, bias=False)
      (1): BatchNorm2d(93, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(93, 185, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(185, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (7): Sequential(
      (0): Conv2d(185, 185, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=185, bias=False)
      (1): BatchNorm2d(185, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(185, 185, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(185, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (8): Sequential(
      (0): Conv2d(185, 185, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=185, bias=False)
      (1): BatchNorm2d(185, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(185, 185, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(185, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (9): Sequential(
      (0): Conv2d(185, 185, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=185, bias=False)
      (1): BatchNorm2d(185, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(185, 185, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(185, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (10): Sequential(
      (0): Conv2d(185, 185, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=185, bias=False)
      (1): BatchNorm2d(185, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(185, 185, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(185, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (11): Sequential(
      (0): Conv2d(185, 185, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=185, bias=False)
      (1): BatchNorm2d(185, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(185, 67, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(67, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (12): Sequential(
      (0): Conv2d(67, 67, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=67, bias=False)
      (1): BatchNorm2d(67, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(67, 369, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(369, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (13): Sequential(
      (0): Conv2d(369, 369, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=369, bias=False)
      (1): BatchNorm2d(369, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(369, 222, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (4): BatchNorm2d(222, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
  )
  (extras): ModuleList(
    (0): Sequential(
      (0): Conv2d(222, 93, kernel_size=(1, 1), stride=(1, 1))
      (1): ReLU()
      (2): Sequential(
        (0): Conv2d(93, 93, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=93)
        (1): ReLU()
        (2): Conv2d(93, 111, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (1): Sequential(
      (0): Conv2d(111, 47, kernel_size=(1, 1), stride=(1, 1))
      (1): ReLU()
      (2): Sequential(
        (0): Conv2d(47, 47, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=47)
        (1): ReLU()
        (2): Conv2d(47, 56, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (2): Sequential(
      (0): Conv2d(56, 47, kernel_size=(1, 1), stride=(1, 1))
      (1): ReLU()
      (2): Sequential(
        (0): Conv2d(47, 47, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=47)
        (1): ReLU()
        (2): Conv2d(47, 56, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (3): Sequential(
      (0): Conv2d(56, 47, kernel_size=(1, 1), stride=(1, 1))
      (1): ReLU()
      (2): Sequential(
        (0): Conv2d(47, 47, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=47)
        (1): ReLU()
        (2): Conv2d(47, 154, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (classification_headers): ModuleList(
    (0): Sequential(
      (0): Conv2d(67, 67, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=67)
      (1): ReLU()
      (2): Conv2d(67, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (1): Sequential(
      (0): Conv2d(222, 222, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=222)
      (1): ReLU()
      (2): Conv2d(222, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (2): Sequential(
      (0): Conv2d(111, 111, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=111)
      (1): ReLU()
      (2): Conv2d(111, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (3): Sequential(
      (0): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56)
      (1): ReLU()
      (2): Conv2d(56, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (4): Sequential(
      (0): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56)
      (1): ReLU()
      (2): Conv2d(56, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (5): Conv2d(154, 12, kernel_size=(1, 1), stride=(1, 1))
  )
  (regression_headers): ModuleList(
    (0): Sequential(
      (0): Conv2d(67, 67, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=67)
      (1): ReLU()
      (2): Conv2d(67, 24, kernel_size=(1, 1), stride=(1, 1))
    )
    (1): Sequential(
      (0): Conv2d(222, 222, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=222)
      (1): ReLU()
      (2): Conv2d(222, 24, kernel_size=(1, 1), stride=(1, 1))
    )
    (2): Sequential(
      (0): Conv2d(111, 111, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=111)
      (1): ReLU()
      (2): Conv2d(111, 24, kernel_size=(1, 1), stride=(1, 1))
    )
    (3): Sequential(
      (0): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56)
      (1): ReLU()
      (2): Conv2d(56, 24, kernel_size=(1, 1), stride=(1, 1))
    )
    (4): Sequential(
      (0): Conv2d(56, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=56)
      (1): ReLU()
      (2): Conv2d(56, 24, kernel_size=(1, 1), stride=(1, 1))
    )
    (5): Conv2d(154, 24, kernel_size=(1, 1), stride=(1, 1))
  )
  (source_layer_add_ons): ModuleList()
)
Saved prune model models/prunefromws1per0.4/prune.pth
Number of Parameters: 0.4M
Epoch: 0, Validation Loss: 4.9560, Validation Regression Loss 2.6350, Validation Classification Loss: 2.3210
Saved model models/prunefromws1per0.4/Epoch-0-Loss-4.956042289733887.pth
Epoch: 10, Validation Loss: 3.9842, Validation Regression Loss 1.8493, Validation Classification Loss: 2.1348
Saved model models/prunefromws1per0.4/Epoch-10-Loss-3.9841668946402415.pth
Epoch: 20, Validation Loss: 3.6505, Validation Regression Loss 1.5734, Validation Classification Loss: 2.0770
Saved model models/prunefromws1per0.4/Epoch-20-Loss-3.6504630020686557.pth
Epoch: 30, Validation Loss: 3.6401, Validation Regression Loss 1.5497, Validation Classification Loss: 2.0903
Saved model models/prunefromws1per0.4/Epoch-30-Loss-3.640052012034825.pth
Epoch: 40, Validation Loss: 3.6010, Validation Regression Loss 1.5031, Validation Classification Loss: 2.0979
Saved model models/prunefromws1per0.4/Epoch-40-Loss-3.6010434286934987.pth
Epoch: 50, Validation Loss: 3.5583, Validation Regression Loss 1.4531, Validation Classification Loss: 2.1052
Saved model models/prunefromws1per0.4/Epoch-50-Loss-3.5583034924098422.pth
Epoch: 60, Validation Loss: 3.5285, Validation Regression Loss 1.4245, Validation Classification Loss: 2.1040
Saved model models/prunefromws1per0.4/Epoch-60-Loss-3.528529167175293.pth
Epoch: 70, Validation Loss: 3.5218, Validation Regression Loss 1.4208, Validation Classification Loss: 2.1010
Saved model models/prunefromws1per0.4/Epoch-70-Loss-3.5218009608132497.pth
Epoch: 80, Validation Loss: 3.6227, Validation Regression Loss 1.4572, Validation Classification Loss: 2.1654
Saved model models/prunefromws1per0.4/Epoch-80-Loss-3.622689894267491.pth
